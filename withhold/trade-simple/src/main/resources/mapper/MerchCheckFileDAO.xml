<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unionpay.withhold.trade.pay.dao.MerchCheckFileDAO">
  <resultMap id="BaseResultMap" type="com.unionpay.withhold.trade.pay.pojo.MerchCheckFileDO">
    <id column="TID" jdbcType="INTEGER" property="tid" />
    <result column="merchNo" jdbcType="CHAR" property="merchno" />
    <result column="checkDate" jdbcType="CHAR" property="checkdate" />
    <result column="intime" jdbcType="CHAR" property="intime" />
    <result column="fileName" jdbcType="CHAR" property="filename" />
    <result column="uri" jdbcType="CHAR" property="uri" />
    <result column="requestTime" jdbcType="CHAR" property="requesttime" />
    <result column="url" jdbcType="CHAR" property="url" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TID, merchNo, checkDate, intime, fileName, uri, requestTime, url
  </sql>
  <select id="selectByExample" parameterType="com.unionpay.withhold.trade.pay.pojo.MerchCheckFileDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_merch_checkfile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_merch_checkfile
    where TID = #{tid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_merch_checkfile
    where TID = #{tid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unionpay.withhold.trade.pay.pojo.MerchCheckFileDO">
    insert into t_merch_checkfile (TID, merchNo, checkDate, 
      intime, fileName, uri, requestTime, 
      url)
    values (#{tid,jdbcType=INTEGER}, #{merchno,jdbcType=CHAR}, #{checkdate,jdbcType=CHAR}, 
      #{intime,jdbcType=CHAR}, #{filename,jdbcType=CHAR}, #{uri,jdbcType=CHAR}, #{requesttime,jdbcType=CHAR}, 
      #{url,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.unionpay.withhold.trade.pay.pojo.MerchCheckFileDO">
    insert into t_merch_checkfile
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        TID,
      </if>
      <if test="merchno != null">
        merchNo,
      </if>
      <if test="checkdate != null">
        checkDate,
      </if>
      <if test="intime != null">
        intime,
      </if>
      <if test="filename != null">
        fileName,
      </if>
      <if test="uri != null">
        uri,
      </if>
      <if test="requesttime != null">
        requestTime,
      </if>
      <if test="url != null">
        url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="merchno != null">
        #{merchno,jdbcType=CHAR},
      </if>
      <if test="checkdate != null">
        #{checkdate,jdbcType=CHAR},
      </if>
      <if test="intime != null">
        #{intime,jdbcType=CHAR},
      </if>
      <if test="filename != null">
        #{filename,jdbcType=CHAR},
      </if>
      <if test="uri != null">
        #{uri,jdbcType=CHAR},
      </if>
      <if test="requesttime != null">
        #{requesttime,jdbcType=CHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unionpay.withhold.trade.pay.pojo.MerchCheckFileDO">
    update t_merch_checkfile
    <set>
      <if test="merchno != null">
        merchNo = #{merchno,jdbcType=CHAR},
      </if>
      <if test="checkdate != null">
        checkDate = #{checkdate,jdbcType=CHAR},
      </if>
      <if test="intime != null">
        intime = #{intime,jdbcType=CHAR},
      </if>
      <if test="filename != null">
        fileName = #{filename,jdbcType=CHAR},
      </if>
      <if test="uri != null">
        uri = #{uri,jdbcType=CHAR},
      </if>
      <if test="requesttime != null">
        requestTime = #{requesttime,jdbcType=CHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=CHAR},
      </if>
    </set>
    where TID = #{tid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unionpay.withhold.trade.pay.pojo.MerchCheckFileDO">
    update t_merch_checkfile
    set merchNo = #{merchno,jdbcType=CHAR},
      checkDate = #{checkdate,jdbcType=CHAR},
      intime = #{intime,jdbcType=CHAR},
      fileName = #{filename,jdbcType=CHAR},
      uri = #{uri,jdbcType=CHAR},
      requestTime = #{requesttime,jdbcType=CHAR},
      url = #{url,jdbcType=CHAR}
    where TID = #{tid,jdbcType=INTEGER}
  </update>
</mapper>