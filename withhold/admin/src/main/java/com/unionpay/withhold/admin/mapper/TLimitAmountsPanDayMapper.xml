<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.unionpay.withhold.admin.mapper.TLimitAmountsPanDayMapper" >
  <resultMap id="BaseResultMap" type="com.unionpay.withhold.admin.pojo.TLimitAmountsPanDay" >
    <id column="TID" property="tid" jdbcType="INTEGER" />
    <result column="CASEID" property="caseid" jdbcType="DECIMAL" />
    <result column="CARDTYPE" property="cardtype" jdbcType="VARCHAR" />
    <result column="LIMIT_AMOUNT" property="limitAmount" jdbcType="DECIMAL" />
    <result column="RISKLEVEL" property="risklevel" jdbcType="DECIMAL" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="NOTES" property="notes" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
  	<!-- >关联属性 -->
    <result column="RISKNAME" property="riskname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TID, CASEID, CARDTYPE, LIMIT_AMOUNT, RISKLEVEL, STATUS, NOTES, REMARKS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.unionpay.withhold.admin.pojo.TLimitAmountsPanDayExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_limit_amounts_pan_day
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_limit_amounts_pan_day
    where TID = #{tid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_limit_amounts_pan_day
    where TID = #{tid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.unionpay.withhold.admin.pojo.TLimitAmountsPanDayExample" >
    delete from t_limit_amounts_pan_day
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.unionpay.withhold.admin.pojo.TLimitAmountsPanDay" >
    insert into t_limit_amounts_pan_day (TID, CASEID, CARDTYPE, 
      LIMIT_AMOUNT, RISKLEVEL, STATUS, 
      NOTES, REMARKS)
    values (#{tid,jdbcType=INTEGER}, #{caseid,jdbcType=DECIMAL}, #{cardtype,jdbcType=VARCHAR}, 
      #{limitAmount,jdbcType=DECIMAL}, #{risklevel,jdbcType=DECIMAL}, #{status,jdbcType=VARCHAR}, 
      #{notes,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.unionpay.withhold.admin.pojo.TLimitAmountsPanDay" >
    insert into t_limit_amounts_pan_day
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        TID,
      </if>
      <if test="caseid != null" >
        CASEID,
      </if>
      <if test="cardtype != null" >
        CARDTYPE,
      </if>
      <if test="limitAmount != null" >
        LIMIT_AMOUNT,
      </if>
      <if test="risklevel != null" >
        RISKLEVEL,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="notes != null" >
        NOTES,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="caseid != null" >
        #{caseid,jdbcType=DECIMAL},
      </if>
      <if test="cardtype != null" >
        #{cardtype,jdbcType=VARCHAR},
      </if>
      <if test="limitAmount != null" >
        #{limitAmount,jdbcType=DECIMAL},
      </if>
      <if test="risklevel != null" >
        #{risklevel,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.unionpay.withhold.admin.pojo.TLimitAmountsPanDayExample" resultType="java.lang.Integer" >
    select count(*) from t_limit_amounts_pan_day
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_limit_amounts_pan_day
    <set >
      <if test="record.tid != null" >
        TID = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.caseid != null" >
        CASEID = #{record.caseid,jdbcType=DECIMAL},
      </if>
      <if test="record.cardtype != null" >
        CARDTYPE = #{record.cardtype,jdbcType=VARCHAR},
      </if>
      <if test="record.limitAmount != null" >
        LIMIT_AMOUNT = #{record.limitAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.risklevel != null" >
        RISKLEVEL = #{record.risklevel,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.notes != null" >
        NOTES = #{record.notes,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        REMARKS = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_limit_amounts_pan_day
    set TID = #{record.tid,jdbcType=INTEGER},
      CASEID = #{record.caseid,jdbcType=DECIMAL},
      CARDTYPE = #{record.cardtype,jdbcType=VARCHAR},
      LIMIT_AMOUNT = #{record.limitAmount,jdbcType=DECIMAL},
      RISKLEVEL = #{record.risklevel,jdbcType=DECIMAL},
      STATUS = #{record.status,jdbcType=VARCHAR},
      NOTES = #{record.notes,jdbcType=VARCHAR},
      REMARKS = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.unionpay.withhold.admin.pojo.TLimitAmountsPanDay" >
    update t_limit_amounts_pan_day
    <set >
      <if test="caseid != null" >
        CASEID = #{caseid,jdbcType=DECIMAL},
      </if>
      <if test="cardtype != null" >
        CARDTYPE = #{cardtype,jdbcType=VARCHAR},
      </if>
      <if test="limitAmount != null" >
        LIMIT_AMOUNT = #{limitAmount,jdbcType=DECIMAL},
      </if>
      <if test="risklevel != null" >
        RISKLEVEL = #{risklevel,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="notes != null" >
        NOTES = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where TID = #{tid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unionpay.withhold.admin.pojo.TLimitAmountsPanDay" >
    update t_limit_amounts_pan_day
    set CASEID = #{caseid,jdbcType=DECIMAL},
      CARDTYPE = #{cardtype,jdbcType=VARCHAR},
      LIMIT_AMOUNT = #{limitAmount,jdbcType=DECIMAL},
      RISKLEVEL = #{risklevel,jdbcType=DECIMAL},
      STATUS = #{status,jdbcType=VARCHAR},
      NOTES = #{notes,jdbcType=VARCHAR},
      REMARKS = #{remarks,jdbcType=VARCHAR}
    where TID = #{tid,jdbcType=INTEGER}
  </update>
  
  <select id="queryLimitMemNumsDay" resultMap="BaseResultMap">
		select lmn.*,r.RISKNAME
		from t_limit_amounts_pan_day lmn 
		LEFT JOIN t_risk_case rc
		ON lmn.CASEID=rc.CASEID 
		LEFT JOIN t_risk r
		ON r.RISKVER=rc.RISKVER
		 <where>
			<if test="caseid!= null and caseid !=''">
				lmn.CASEID= #{caseid}
			</if>			
		</where>
		order by lmn.tid DESC
		<if test="beginRow != null and pageSize != null">
			limit #{beginRow},#{pageSize}
		</if>
	</select>
	
	<select id="selectCountWithCondition" resultType="java.lang.Integer">
		select COUNT(*) 
		from t_limit_amounts_pan_day lmn 
		LEFT JOIN t_risk_case rc
		ON lmn.CASEID=rc.CASEID 
		LEFT JOIN t_risk r
		ON r.RISKVER=rc.RISKVER
		<where>
			<if test="caseid!= null and caseid !=''">
				lmn.CASEID= #{caseid}
			</if>			
		</where>
	</select>
	<select id="queryLimitMemNumsDaybytid" resultMap="BaseResultMap">
		select lmn.*,r.RISKNAME
		from t_limit_amounts_pan_day lmn 
		LEFT JOIN t_risk_case rc
		ON lmn.CASEID=rc.CASEID 
		LEFT JOIN t_risk r
		ON r.RISKVER=rc.RISKVER
		 where lmn.tid=#{tid}
	 </select> 
	 
	 <select id="queryAllLimitMemNumsDay" resultMap="BaseResultMap">
		select LIMIT_AMOUNT,RISKLEVEL
		from t_limit_amounts_pan_day  	
		where CASEID=#{caseid} AND `STATUS`='00' AND CARDTYPE=#{cardtype}				 
	</select>
  
</mapper>