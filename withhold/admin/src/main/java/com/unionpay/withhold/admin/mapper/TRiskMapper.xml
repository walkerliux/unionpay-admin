<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.unionpay.withhold.admin.mapper.TRiskMapper" >
  <resultMap id="BaseResultMap" type="com.unionpay.withhold.admin.bean.TRisk" >
    <id column="RISKID" property="riskid" jdbcType="DECIMAL" />
    <result column="RISKVER" property="riskver" jdbcType="CHAR" />
    <result column="RISKNAME" property="riskname" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="INTIME" property="intime" jdbcType="TIMESTAMP" />
    <result column="INUSER" property="inuser" jdbcType="DECIMAL" />
    <result column="UPTIME" property="uptime" jdbcType="TIMESTAMP" />
    <result column="UPUSER" property="upuser" jdbcType="DECIMAL" />
    <result column="NOTES" property="notes" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    RISKID, RISKVER, RISKNAME, STATUS, INTIME, INUSER, UPTIME, UPUSER, NOTES, REMARKS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.unionpay.withhold.admin.bean.TRiskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_risk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_risk
    where RISKID = #{riskid,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_risk
    where RISKID = #{riskid,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.unionpay.withhold.admin.bean.TRiskExample" >
    delete from t_risk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.unionpay.withhold.admin.bean.TRisk" >
    insert into t_risk (RISKID, RISKVER, RISKNAME, 
      STATUS, INTIME, INUSER, 
      UPTIME, UPUSER, NOTES, 
      REMARKS)
    values (#{riskid,jdbcType=DECIMAL}, #{riskver,jdbcType=CHAR}, #{riskname,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{intime,jdbcType=TIMESTAMP}, #{inuser,jdbcType=DECIMAL}, 
      #{uptime,jdbcType=TIMESTAMP}, #{upuser,jdbcType=DECIMAL}, #{notes,jdbcType=VARCHAR}, 
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.unionpay.withhold.admin.bean.TRisk" >
    insert into t_risk
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="riskid != null" >
        RISKID,
      </if>
      <if test="riskver != null" >
        RISKVER,
      </if>
      <if test="riskname != null" >
        RISKNAME,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="intime != null" >
        INTIME,
      </if>
      <if test="inuser != null" >
        INUSER,
      </if>
      <if test="uptime != null" >
        UPTIME,
      </if>
      <if test="upuser != null" >
        UPUSER,
      </if>
      <if test="notes != null" >
        NOTES,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="riskid != null" >
        #{riskid,jdbcType=DECIMAL},
      </if>
      <if test="riskver != null" >
        #{riskver,jdbcType=CHAR},
      </if>
      <if test="riskname != null" >
        #{riskname,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="intime != null" >
        #{intime,jdbcType=TIMESTAMP},
      </if>
      <if test="inuser != null" >
        #{inuser,jdbcType=DECIMAL},
      </if>
      <if test="uptime != null" >
        #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="upuser != null" >
        #{upuser,jdbcType=DECIMAL},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.unionpay.withhold.admin.bean.TRiskExample" resultType="java.lang.Integer" >
    select count(*) from t_risk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_risk
    <set >
      <if test="record.riskid != null" >
        RISKID = #{record.riskid,jdbcType=DECIMAL},
      </if>
      <if test="record.riskver != null" >
        RISKVER = #{record.riskver,jdbcType=CHAR},
      </if>
      <if test="record.riskname != null" >
        RISKNAME = #{record.riskname,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.intime != null" >
        INTIME = #{record.intime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inuser != null" >
        INUSER = #{record.inuser,jdbcType=DECIMAL},
      </if>
      <if test="record.uptime != null" >
        UPTIME = #{record.uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.upuser != null" >
        UPUSER = #{record.upuser,jdbcType=DECIMAL},
      </if>
      <if test="record.notes != null" >
        NOTES = #{record.notes,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        REMARKS = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_risk
    set RISKID = #{record.riskid,jdbcType=DECIMAL},
      RISKVER = #{record.riskver,jdbcType=CHAR},
      RISKNAME = #{record.riskname,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      INTIME = #{record.intime,jdbcType=TIMESTAMP},
      INUSER = #{record.inuser,jdbcType=DECIMAL},
      UPTIME = #{record.uptime,jdbcType=TIMESTAMP},
      UPUSER = #{record.upuser,jdbcType=DECIMAL},
      NOTES = #{record.notes,jdbcType=VARCHAR},
      REMARKS = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.unionpay.withhold.admin.bean.TRisk" >
    update t_risk
    <set >
      <if test="riskver != null" >
        RISKVER = #{riskver,jdbcType=CHAR},
      </if>
      <if test="riskname != null" >
        RISKNAME = #{riskname,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="intime != null" >
        INTIME = #{intime,jdbcType=TIMESTAMP},
      </if>
      <if test="inuser != null" >
        INUSER = #{inuser,jdbcType=DECIMAL},
      </if>
      <if test="uptime != null" >
        UPTIME = #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="upuser != null" >
        UPUSER = #{upuser,jdbcType=DECIMAL},
      </if>
      <if test="notes != null" >
        NOTES = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where RISKID = #{riskid,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unionpay.withhold.admin.bean.TRisk" >
    update t_risk
    set RISKVER = #{riskver,jdbcType=CHAR},
      RISKNAME = #{riskname,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      INTIME = #{intime,jdbcType=TIMESTAMP},
      INUSER = #{inuser,jdbcType=DECIMAL},
      UPTIME = #{uptime,jdbcType=TIMESTAMP},
      UPUSER = #{upuser,jdbcType=DECIMAL},
      NOTES = #{notes,jdbcType=VARCHAR},
      REMARKS = #{remarks,jdbcType=VARCHAR}
    where RISKID = #{riskid,jdbcType=DECIMAL}
  </update>
</mapper>