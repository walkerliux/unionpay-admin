<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.unionpay.withhold.admin.mapper.TBlacklistPanMapper">
	<resultMap id="BaseResultMap"
		type="com.unionpay.withhold.admin.pojo.TBlacklistPan">
		<id column="TID" property="tid" jdbcType="INTEGER" />
		<result column="PAN" property="pan" jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="VARCHAR" />
		<result column="NOTES" property="notes" jdbcType="VARCHAR" />
		<result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
		<result column="RISKLEVEL" property="risklevel" jdbcType="DECIMAL" />
		<result column="RISKLEVELNAME" property="riskLevelName"
			jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		TID, PAN, STATUS, NOTES, REMARKS, RISKLEVEL
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.unionpay.withhold.admin.pojo.TBlacklistPanExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_blacklist_pan
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_blacklist_pan
		where TID = #{tid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		t_blacklist_pan
		where TID = #{tid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.unionpay.withhold.admin.pojo.TBlacklistPanExample">
		delete from t_blacklist_pan
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.unionpay.withhold.admin.pojo.TBlacklistPan">
		insert into t_blacklist_pan
		(TID, PAN, STATUS,
		NOTES, REMARKS, RISKLEVEL
		)
		values
		(#{tid,jdbcType=INTEGER}, #{pan,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR},
		#{notes,jdbcType=VARCHAR},
		#{remarks,jdbcType=VARCHAR}, #{risklevel,jdbcType=DECIMAL}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.unionpay.withhold.admin.pojo.TBlacklistPan">
		insert into t_blacklist_pan
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="tid != null">
				TID,
			</if>
			<if test="pan != null">
				PAN,
			</if>
			<if test="status != null">
				STATUS,
			</if>
			<if test="notes != null">
				NOTES,
			</if>
			<if test="remarks != null">
				REMARKS,
			</if>
			<if test="risklevel != null">
				RISKLEVEL,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="tid != null">
				#{tid,jdbcType=INTEGER},
			</if>
			<if test="pan != null">
				#{pan,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="notes != null">
				#{notes,jdbcType=VARCHAR},
			</if>
			<if test="remarks != null">
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test="risklevel != null">
				#{risklevel,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.unionpay.withhold.admin.pojo.TBlacklistPanExample"
		resultType="java.lang.Integer">
		select count(*) from t_blacklist_pan
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update t_blacklist_pan
		<set>
			<if test="record.tid != null">
				TID = #{record.tid,jdbcType=INTEGER},
			</if>
			<if test="record.pan != null">
				PAN = #{record.pan,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				STATUS = #{record.status,jdbcType=VARCHAR},
			</if>
			<if test="record.notes != null">
				NOTES = #{record.notes,jdbcType=VARCHAR},
			</if>
			<if test="record.remarks != null">
				REMARKS = #{record.remarks,jdbcType=VARCHAR},
			</if>
			<if test="record.risklevel != null">
				RISKLEVEL = #{record.risklevel,jdbcType=DECIMAL},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update t_blacklist_pan
		set TID = #{record.tid,jdbcType=INTEGER},
		PAN =
		#{record.pan,jdbcType=VARCHAR},
		STATUS =
		#{record.status,jdbcType=VARCHAR},
		NOTES =
		#{record.notes,jdbcType=VARCHAR},
		REMARKS =
		#{record.remarks,jdbcType=VARCHAR},
		RISKLEVEL =
		#{record.risklevel,jdbcType=DECIMAL}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.unionpay.withhold.admin.pojo.TBlacklistPan">
		update t_blacklist_pan
		<set>
			<if test="pan != null">
				PAN = #{pan,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				STATUS = #{status,jdbcType=VARCHAR},
			</if>
			<if test="notes != null">
				NOTES = #{notes,jdbcType=VARCHAR},
			</if>
			<if test="remarks != null">
				REMARKS = #{remarks,jdbcType=VARCHAR},
			</if>
			<if test="risklevel != null">
				RISKLEVEL = #{risklevel,jdbcType=DECIMAL},
			</if>
		</set>
		where TID = #{tid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.unionpay.withhold.admin.pojo.TBlacklistPan">
		update
		t_blacklist_pan
		set PAN = #{pan,jdbcType=VARCHAR},
		STATUS =
		#{status,jdbcType=VARCHAR},
		NOTES = #{notes,jdbcType=VARCHAR},
		REMARKS =
		#{remarks,jdbcType=VARCHAR},
		RISKLEVEL = #{risklevel,jdbcType=DECIMAL}
		where TID = #{tid,jdbcType=INTEGER}
	</update>


	<select id="selectWithCondition" resultMap="BaseResultMap">
		SELECT
		bl.*, pd.PARA_NAME AS RISKLEVELNAME
		FROM
		t_blacklist_pan bl
		LEFT
		JOIN t_para_dic pd ON pd.PARA_TYPE = 'RISKLEVEL'
		AND
		bl.RISKLEVEL =
		pd.PARA_CODE
		<where>
			<if test="blacklistPan.pan != null and blacklistPan.pan !=''">
				AND bl.PAN = #{blacklistPan.pan}
			</if>
			<if test="blacklistPan.risklevel != null">
				AND bl.RISKLEVEL = #{blacklistPan.pan}
			</if>
		</where>
		order by TID DESC
		<if test="beginRow != null and pageSize != null">
			limit #{beginRow},#{pageSize}
		</if>
	</select>

	<select id="selectCountWithCondition" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM t_blacklist_pan AS bl
		<where>
			<if test="blacklistPan.pan != null and blacklistPan.pan !=''">
				AND bl.PAN = #{blacklistPan.pan}
			</if>
			<if test="blacklistPan.risklevel != null">
				AND bl.RISKLEVEL = #{blacklistPan.pan}
			</if>
		</where>
	</select>
</mapper>